name: CI

on:
  push:
  pull_request:
  schedule: [cron: "40 1 * * *"]

permissions:
  contents: read

env:
  RUSTFLAGS: -Dwarnings

jobs:
  test:
    name: Test suite
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo test
      - run: cargo test --features generation

  windows:
    name: Test suite (windows)
    runs-on: windows-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo test
      - run: cargo test --features generation

  stable:
    name: Rust ${{matrix.rust}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta]
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
      - run: cargo build --features generation
      - run: cargo build --features serialize
      - run: cargo build --features generation,serialize
      - run: cargo test

  nightly:
    name: Rust nightly ${{matrix.os == 'windows' && '(windows)' || ''}}
    runs-on: ${{matrix.os}}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows]
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo build --features generation
      - run: cargo build --features serialize
      - run: cargo build --features generation,serialize

  msrv:
    name: Rust ${{matrix.rust}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [1.56.0, 1.57.0, 1.58.0]
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
      - run: cargo build --features generation
      - run: cargo build --features serialize
      - run: cargo build --features generation,serialize
      - run: cargo test

  # clippy:
  #   name: Clippy
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 45
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: dtolnay/rust-toolchain@clippy
  #     - run: cargo clippy --features generation -- -Dclippy::all -Dclippy::pedantic

  fmt:
    name: rustfmt-check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            components: rustfmt
            override: true
      - uses: LoliGothick/rustfmt-check@master
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
